[{"C:\\nwitter\\src\\index.js":"1","C:\\nwitter\\src\\components\\App.js":"2","C:\\nwitter\\src\\components\\Router.js":"3","C:\\nwitter\\src\\routes\\Auth.js":"4","C:\\nwitter\\src\\routes\\Home.js":"5","C:\\nwitter\\src\\fbase.js":"6"},{"size":163,"mtime":1608699477544,"results":"7","hashOfConfig":"8"},{"size":924,"mtime":1608703114930,"results":"9","hashOfConfig":"8"},{"size":560,"mtime":1608698812030,"results":"10","hashOfConfig":"8"},{"size":1562,"mtime":1608701686188,"results":"11","hashOfConfig":"8"},{"size":88,"mtime":1608700277459,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1608699457221,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"3x1jy0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\nwitter\\src\\index.js",[],["29","30"],"C:\\nwitter\\src\\components\\App.js",["31"],"C:\\nwitter\\src\\components\\Router.js",["32","33"],"import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\n\r\nconst AppRouter=({isLoggedIn}) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          )}\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\nexport default AppRouter;","C:\\nwitter\\src\\routes\\Auth.js",["34"],"import React, { useState } from 'react';\r\nimport { authService } from '../fbase';\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount,setNewAccount] = useState(true);\r\n\r\n  const onChange = (e) => {\r\n    const {target: {name,value}}=e;\r\n    if(name===\"email\"){\r\n      setEmail(value)\r\n    }else if(name===\"password\"){\r\n      setPassword(value);\r\n    }\r\n  }\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let data;\r\n      if(newAccount){\r\n        // create account \r\n        data = await authService.createUserWithEmailAndPassword(email,password);\r\n      }else {\r\n        // log in \r\n        data = await authService.signInWithEmailAndPassword(email,password);\r\n      }\r\n\r\n      console.log(data);\r\n    }catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\" \r\n          type=\"text\" \r\n          placeholder=\"Email\" \r\n          required value={email}\r\n          onChange={onChange}\r\n          />\r\n        <input \r\n          name=\"password\" \r\n          type=\"password\" \r\n          placeholder=\"Password\" \r\n          required value={password} \r\n          onChange={onChange}\r\n          />\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n\r\n      </form>\r\n      <div>\r\n        <button>Continue with Google</button>\r\n        <button>Continue with GitHub</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth;","C:\\nwitter\\src\\routes\\Home.js",[],"C:\\nwitter\\src\\fbase.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":10,"nodeType":"41","messageId":"42","endLine":4,"endColumn":14},{"ruleId":"39","severity":1,"message":"43","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"44","line":1,"column":14,"nodeType":"41","messageId":"42","endLine":1,"endColumn":22},{"ruleId":"39","severity":1,"message":"45","line":7,"column":21,"nodeType":"41","messageId":"42","endLine":7,"endColumn":34},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'Reac' is defined but never used.","'useState' is defined but never used.","'setNewAccount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]